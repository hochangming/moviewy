{
  "{\"sourceRoot\":\"C:\\\\Users\\\\MSI\\\\Desktop\\\\WebDevelopmentProject\\\\Moviewy\\\\backend\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\MSI\\\\Desktop\\\\WebDevelopmentProject\\\\Moviewy\",\"filename\":\"C:\\\\Users\\\\MSI\\\\Desktop\\\\WebDevelopmentProject\\\\Moviewy\\\\backend\\\\server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\MSI\\\\Desktop\\\\WebDevelopmentProject\\\\Moviewy\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\MSI\\Desktop\\WebDevelopmentProject\\Moviewy\\backend\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\MSI\\Desktop\\WebDevelopmentProject\\Moviewy",
      "filename": "C:\\Users\\MSI\\Desktop\\WebDevelopmentProject\\Moviewy\\backend\\server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\MSI\\Desktop\\WebDevelopmentProject\\Moviewy",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\MSI\\Desktop\\WebDevelopmentProject\\Moviewy\\backend\\server.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\MSI\\Desktop\\WebDevelopmentProject\\Moviewy\\backend\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\MSI\\Desktop\\WebDevelopmentProject\\Moviewy\\backend\\",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "import express from 'express';\nimport bodyparser from 'body-parser';\nimport mysql from 'mysql';\nimport cors from 'cors';\nconst app = express();\nconst db = mysql.createPool({\n  host: 'localhost',\n  user: 'root',\n  password: 'password',\n  database: 'moviedatabase',\n  port: \"3306\"\n});\nconst port = process.env.PORT || 5000;\napp.use(cors());\napp.use(express.json());\napp.use(bodyparser.urlencoded({\n  extended: true\n}));\napp.get('/api/get', (req, res) => {\n  const sqlSelect = \"SELECT * FROM movie_reviews\";\n  db.query(sqlSelect, (err, result) => {\n    res.send(result);\n  });\n});\napp.post('/api/insert', (req, res) => {\n  const movieName = req.body.movieName;\n  const movieReview = req.body.movieReview;\n  const movieRating = req.body.movieRating;\n  console.log(\"Connected!\");\n  const sqlInsert = \"INSERT INTO movie_reviews (movie_name, movie_review, movie_rating) VALUES (?,?,?)\";\n  db.query(sqlInsert, [movieName, movieReview, movieRating], (err, result) => {\n    console.log(result);\n  });\n});\napp.delete('/api/delete/:movieName', function (req, res) {\n  const name = req.params.movieName;\n  db.query(\"DELETE FROM movie_reviews WHERE movie_name = ?\", name, (err, result) => {\n    if (err) console.log(err);\n  });\n});\napp.put('/api/update', function (req, res) {\n  const name = req.body.movieName;\n  const review = req.body.movieReview;\n  db.query(\"UPDATE movie_reviews SET movie_review = ? WHERE movie_name = ?\", [review, name], (err, result) => {\n    if (err) console.log(err);\n  });\n});\napp.delete('');\napp.listen(port, () => {\n  console.log(\"running on port 5000\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwiYm9keXBhcnNlciIsIm15c3FsIiwiY29ycyIsImFwcCIsImRiIiwiY3JlYXRlUG9vbCIsImhvc3QiLCJ1c2VyIiwicGFzc3dvcmQiLCJkYXRhYmFzZSIsInBvcnQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsInVzZSIsImpzb24iLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJnZXQiLCJyZXEiLCJyZXMiLCJzcWxTZWxlY3QiLCJxdWVyeSIsImVyciIsInJlc3VsdCIsInNlbmQiLCJwb3N0IiwibW92aWVOYW1lIiwiYm9keSIsIm1vdmllUmV2aWV3IiwibW92aWVSYXRpbmciLCJjb25zb2xlIiwibG9nIiwic3FsSW5zZXJ0IiwiZGVsZXRlIiwibmFtZSIsInBhcmFtcyIsInB1dCIsInJldmlldyIsImxpc3RlbiJdLCJtYXBwaW5ncyI6IkFBQUEsT0FBT0EsT0FBUCxNQUFvQixTQUFwQjtBQUNBLE9BQU9DLFVBQVAsTUFBdUIsYUFBdkI7QUFDQSxPQUFPQyxLQUFQLE1BQWtCLE9BQWxCO0FBQ0EsT0FBT0MsSUFBUCxNQUFpQixNQUFqQjtBQUVBLE1BQU1DLEdBQUcsR0FBR0osT0FBTyxFQUFuQjtBQUNBLE1BQU1LLEVBQUUsR0FBR0gsS0FBSyxDQUFDSSxVQUFOLENBQWlCO0FBQ3hCQyxFQUFBQSxJQUFJLEVBQUUsV0FEa0I7QUFFeEJDLEVBQUFBLElBQUksRUFBRSxNQUZrQjtBQUd4QkMsRUFBQUEsUUFBUSxFQUFFLFVBSGM7QUFJeEJDLEVBQUFBLFFBQVEsRUFBRSxlQUpjO0FBS3hCQyxFQUFBQSxJQUFJLEVBQUU7QUFMa0IsQ0FBakIsQ0FBWDtBQVFBLE1BQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBQVosSUFBb0IsSUFBakM7QUFDQVYsR0FBRyxDQUFDVyxHQUFKLENBQVFaLElBQUksRUFBWjtBQUVBQyxHQUFHLENBQUNXLEdBQUosQ0FBUWYsT0FBTyxDQUFDZ0IsSUFBUixFQUFSO0FBRUFaLEdBQUcsQ0FBQ1csR0FBSixDQUFRZCxVQUFVLENBQUNnQixVQUFYLENBQXNCO0FBQUNDLEVBQUFBLFFBQVEsRUFBQztBQUFWLENBQXRCLENBQVI7QUFHQWQsR0FBRyxDQUFDZSxHQUFKLENBQVEsVUFBUixFQUFtQixDQUFDQyxHQUFELEVBQUtDLEdBQUwsS0FBVztBQUMxQixRQUFNQyxTQUFTLEdBQUcsNkJBQWxCO0FBQ0FqQixFQUFBQSxFQUFFLENBQUNrQixLQUFILENBQVNELFNBQVQsRUFBb0IsQ0FBQ0UsR0FBRCxFQUFLQyxNQUFMLEtBQWM7QUFDOUJKLElBQUFBLEdBQUcsQ0FBQ0ssSUFBSixDQUFTRCxNQUFUO0FBQ0gsR0FGRDtBQUdILENBTEQ7QUFNQXJCLEdBQUcsQ0FBQ3VCLElBQUosQ0FBUyxhQUFULEVBQXVCLENBQUNQLEdBQUQsRUFBS0MsR0FBTCxLQUFXO0FBQzlCLFFBQU1PLFNBQVMsR0FBR1IsR0FBRyxDQUFDUyxJQUFKLENBQVNELFNBQTNCO0FBQ0EsUUFBTUUsV0FBVyxHQUFHVixHQUFHLENBQUNTLElBQUosQ0FBU0MsV0FBN0I7QUFDQSxRQUFNQyxXQUFXLEdBQUdYLEdBQUcsQ0FBQ1MsSUFBSixDQUFTRSxXQUE3QjtBQUNBQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxZQUFaO0FBQ0EsUUFBTUMsU0FBUyxHQUFHLG1GQUFsQjtBQUNBN0IsRUFBQUEsRUFBRSxDQUFDa0IsS0FBSCxDQUFTVyxTQUFULEVBQW9CLENBQUNOLFNBQUQsRUFBWUUsV0FBWixFQUF5QkMsV0FBekIsQ0FBcEIsRUFBMkQsQ0FBQ1AsR0FBRCxFQUFLQyxNQUFMLEtBQWM7QUFDckVPLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZUixNQUFaO0FBQ0YsR0FGRjtBQUdILENBVEQ7QUFVQXJCLEdBQUcsQ0FBQytCLE1BQUosQ0FBVyx3QkFBWCxFQUFxQyxVQUFTZixHQUFULEVBQWNDLEdBQWQsRUFBbUI7QUFDcEQsUUFBTWUsSUFBSSxHQUFHaEIsR0FBRyxDQUFDaUIsTUFBSixDQUFXVCxTQUF4QjtBQUNBdkIsRUFBQUEsRUFBRSxDQUFDa0IsS0FBSCxDQUFTLGdEQUFULEVBQTJEYSxJQUEzRCxFQUNJLENBQUNaLEdBQUQsRUFBS0MsTUFBTCxLQUFnQjtBQUNaLFFBQUdELEdBQUgsRUFBUVEsT0FBTyxDQUFDQyxHQUFSLENBQVlULEdBQVo7QUFDWCxHQUhMO0FBS0gsQ0FQRDtBQVNBcEIsR0FBRyxDQUFDa0MsR0FBSixDQUFRLGFBQVIsRUFBdUIsVUFBU2xCLEdBQVQsRUFBY0MsR0FBZCxFQUFtQjtBQUN0QyxRQUFNZSxJQUFJLEdBQUdoQixHQUFHLENBQUNTLElBQUosQ0FBU0QsU0FBdEI7QUFDQSxRQUFNVyxNQUFNLEdBQUduQixHQUFHLENBQUNTLElBQUosQ0FBU0MsV0FBeEI7QUFDQXpCLEVBQUFBLEVBQUUsQ0FBQ2tCLEtBQUgsQ0FBUyxnRUFBVCxFQUEyRSxDQUFDZ0IsTUFBRCxFQUFTSCxJQUFULENBQTNFLEVBQ0ksQ0FBQ1osR0FBRCxFQUFLQyxNQUFMLEtBQWdCO0FBQ1osUUFBR0QsR0FBSCxFQUFRUSxPQUFPLENBQUNDLEdBQVIsQ0FBWVQsR0FBWjtBQUNYLEdBSEw7QUFLSCxDQVJEO0FBU0FwQixHQUFHLENBQUMrQixNQUFKLENBQVcsRUFBWDtBQUNBL0IsR0FBRyxDQUFDb0MsTUFBSixDQUFXN0IsSUFBWCxFQUFpQixNQUFNO0FBQ25CcUIsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksc0JBQVo7QUFDSCxDQUZEIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcTVNJXFxEZXNrdG9wXFxXZWJEZXZlbG9wbWVudFByb2plY3RcXE1vdmlld3lcXGJhY2tlbmRcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xyXG5pbXBvcnQgYm9keXBhcnNlciBmcm9tICdib2R5LXBhcnNlcic7XHJcbmltcG9ydCBteXNxbCBmcm9tICdteXNxbCc7XHJcbmltcG9ydCBjb3JzIGZyb20gJ2NvcnMnO1xyXG5cclxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xyXG5jb25zdCBkYiA9IG15c3FsLmNyZWF0ZVBvb2woe1xyXG4gICAgaG9zdDogJ2xvY2FsaG9zdCcsXHJcbiAgICB1c2VyOiAncm9vdCcsXHJcbiAgICBwYXNzd29yZDogJ3Bhc3N3b3JkJyxcclxuICAgIGRhdGFiYXNlOiAnbW92aWVkYXRhYmFzZScsXHJcbiAgICBwb3J0OiBcIjMzMDZcIlxyXG5cclxufSk7XHJcbmNvbnN0IHBvcnQgPSBwcm9jZXNzLmVudi5QT1JUIHx8IDUwMDA7XHJcbmFwcC51c2UoY29ycygpKTtcclxuXHJcbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xyXG5cclxuYXBwLnVzZShib2R5cGFyc2VyLnVybGVuY29kZWQoe2V4dGVuZGVkOnRydWV9KSk7XHJcbiBcclxuXHJcbmFwcC5nZXQoJy9hcGkvZ2V0JywocmVxLHJlcyk9PntcclxuICAgIGNvbnN0IHNxbFNlbGVjdCA9IFwiU0VMRUNUICogRlJPTSBtb3ZpZV9yZXZpZXdzXCI7XHJcbiAgICBkYi5xdWVyeShzcWxTZWxlY3QsIChlcnIscmVzdWx0KT0+e1xyXG4gICAgICAgIHJlcy5zZW5kKHJlc3VsdCk7XHJcbiAgICB9KVxyXG59KVxyXG5hcHAucG9zdCgnL2FwaS9pbnNlcnQnLChyZXEscmVzKT0+eyBcclxuICAgIGNvbnN0IG1vdmllTmFtZSA9IHJlcS5ib2R5Lm1vdmllTmFtZTtcclxuICAgIGNvbnN0IG1vdmllUmV2aWV3ID0gcmVxLmJvZHkubW92aWVSZXZpZXc7XHJcbiAgICBjb25zdCBtb3ZpZVJhdGluZyA9IHJlcS5ib2R5Lm1vdmllUmF0aW5nO1xyXG4gICAgY29uc29sZS5sb2coXCJDb25uZWN0ZWQhXCIpO1xyXG4gICAgY29uc3Qgc3FsSW5zZXJ0ID0gXCJJTlNFUlQgSU5UTyBtb3ZpZV9yZXZpZXdzIChtb3ZpZV9uYW1lLCBtb3ZpZV9yZXZpZXcsIG1vdmllX3JhdGluZykgVkFMVUVTICg/LD8sPylcIlxyXG4gICAgZGIucXVlcnkoc3FsSW5zZXJ0LCBbbW92aWVOYW1lLCBtb3ZpZVJldmlldywgbW92aWVSYXRpbmddLCAoZXJyLHJlc3VsdCk9PntcclxuICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQpOyAgICBcclxuICAgICB9KSAgXHJcbn0pXHJcbmFwcC5kZWxldGUoJy9hcGkvZGVsZXRlLzptb3ZpZU5hbWUnLCBmdW5jdGlvbihyZXEsIHJlcykge1xyXG4gICAgY29uc3QgbmFtZSA9IHJlcS5wYXJhbXMubW92aWVOYW1lO1xyXG4gICAgZGIucXVlcnkoXCJERUxFVEUgRlJPTSBtb3ZpZV9yZXZpZXdzIFdIRVJFIG1vdmllX25hbWUgPSA/XCIsIG5hbWUsXHJcbiAgICAgICAgKGVycixyZXN1bHQpID0+IHtcclxuICAgICAgICAgICAgaWYoZXJyKSBjb25zb2xlLmxvZyhlcnIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICApO1xyXG59KTtcclxuXHJcbmFwcC5wdXQoJy9hcGkvdXBkYXRlJywgZnVuY3Rpb24ocmVxLCByZXMpIHtcclxuICAgIGNvbnN0IG5hbWUgPSByZXEuYm9keS5tb3ZpZU5hbWU7XHJcbiAgICBjb25zdCByZXZpZXcgPSByZXEuYm9keS5tb3ZpZVJldmlldztcclxuICAgIGRiLnF1ZXJ5KFwiVVBEQVRFIG1vdmllX3Jldmlld3MgU0VUIG1vdmllX3JldmlldyA9ID8gV0hFUkUgbW92aWVfbmFtZSA9ID9cIiwgW3JldmlldywgbmFtZV0sXHJcbiAgICAgICAgKGVycixyZXN1bHQpID0+IHtcclxuICAgICAgICAgICAgaWYoZXJyKSBjb25zb2xlLmxvZyhlcnIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICApO1xyXG59KTtcclxuYXBwLmRlbGV0ZSgnJylcclxuYXBwLmxpc3Rlbihwb3J0LCAoKSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZyhcInJ1bm5pbmcgb24gcG9ydCA1MDAwXCIpO1xyXG59KSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "bodyparser",
        "mysql",
        "cors",
        "app",
        "db",
        "createPool",
        "host",
        "user",
        "password",
        "database",
        "port",
        "process",
        "env",
        "PORT",
        "use",
        "json",
        "urlencoded",
        "extended",
        "get",
        "req",
        "res",
        "sqlSelect",
        "query",
        "err",
        "result",
        "send",
        "post",
        "movieName",
        "body",
        "movieReview",
        "movieRating",
        "console",
        "log",
        "sqlInsert",
        "delete",
        "name",
        "params",
        "put",
        "review",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\MSI\\Desktop\\WebDevelopmentProject\\Moviewy\\backend\\",
      "sourcesContent": [
        "import express from 'express';\r\nimport bodyparser from 'body-parser';\r\nimport mysql from 'mysql';\r\nimport cors from 'cors';\r\n\r\nconst app = express();\r\nconst db = mysql.createPool({\r\n    host: 'localhost',\r\n    user: 'root',\r\n    password: 'password',\r\n    database: 'moviedatabase',\r\n    port: \"3306\"\r\n\r\n});\r\nconst port = process.env.PORT || 5000;\r\napp.use(cors());\r\n\r\napp.use(express.json());\r\n\r\napp.use(bodyparser.urlencoded({extended:true}));\r\n \r\n\r\napp.get('/api/get',(req,res)=>{\r\n    const sqlSelect = \"SELECT * FROM movie_reviews\";\r\n    db.query(sqlSelect, (err,result)=>{\r\n        res.send(result);\r\n    })\r\n})\r\napp.post('/api/insert',(req,res)=>{ \r\n    const movieName = req.body.movieName;\r\n    const movieReview = req.body.movieReview;\r\n    const movieRating = req.body.movieRating;\r\n    console.log(\"Connected!\");\r\n    const sqlInsert = \"INSERT INTO movie_reviews (movie_name, movie_review, movie_rating) VALUES (?,?,?)\"\r\n    db.query(sqlInsert, [movieName, movieReview, movieRating], (err,result)=>{\r\n        console.log(result);    \r\n     })  \r\n})\r\napp.delete('/api/delete/:movieName', function(req, res) {\r\n    const name = req.params.movieName;\r\n    db.query(\"DELETE FROM movie_reviews WHERE movie_name = ?\", name,\r\n        (err,result) => {\r\n            if(err) console.log(err);\r\n        }\r\n        );\r\n});\r\n\r\napp.put('/api/update', function(req, res) {\r\n    const name = req.body.movieName;\r\n    const review = req.body.movieReview;\r\n    db.query(\"UPDATE movie_reviews SET movie_review = ? WHERE movie_name = ?\", [review, name],\r\n        (err,result) => {\r\n            if(err) console.log(err);\r\n        }\r\n        );\r\n});\r\napp.delete('')\r\napp.listen(port, () => {\r\n    console.log(\"running on port 5000\");\r\n})"
      ]
    },
    "sourceType": "module",
    "mtime": 1602511262767
  }
}